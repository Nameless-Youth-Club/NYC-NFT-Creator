const { expect } = require("chai");
const { ethers } = require("hardhat");
const fs = require('fs');
const path = require('path');
const RLEtoSVG = require('../image-processing/RLEtoSVG');
const { type } = require("os");

//[topY, rightX, bottomY, leftX]

let owner;
let addr1;
let addr2;

describe("Hardhat test network", function () {
  it("Should return the new greeting once it's changed", async function () {
    [owner, addr1, addr2] = await ethers.getSigners();
    const nftContractFactory = await hre.ethers.getContractFactory('NYCDescriptor');
    const nftDescriptor = await nftContractFactory.deploy();
    await nftDescriptor.deployed();
    console.log("Descriptor Contract deployed to:", nftDescriptor.address);

    const nftContractFactorySeeder = await hre.ethers.getContractFactory('NYCSeeder');
    const nftSeeder = await nftContractFactorySeeder.deploy();
    await nftSeeder.deployed();
    console.log("Seeder Contract deployed to:", nftSeeder.address);


    //HEAD ------------------------------
    // let filenameHead = path.normalize(__dirname + "/../Palettes/RLE_Colors_head.txt")
    // const allFileContentsHead = fs.readFileSync(filenameHead, 'utf-8');
    // allFileContentsHead.split(/\r?\n/).forEach(async (line) =>  {
    //   if (line != "") {
    //        line = line.substring(1, line.length - 1)
    //        line = line.split(', ')
    //        txn = await nftDescriptor.addManyColorsToHeadPalette(line)
    //        await txn.wait()
    //   }
    // });
    const headPalettes = [
      ['#00000000', '#3ff5ff', '#4effff', '#6f673e', '#787343', '#52ffff', '#bcb770', '#36c9ff', '#1b6aad', '#002150', '#98925b', '#299af3', '#0e5191', '#aba061', '#e6e485', '#29c9ff', '#748457', '#898f63', '#0f6edc', '#1d87e1', '#6a7046', '#908853', '#dac975', '#0d1d50', '#bdcd7c', '#e9d67d', '#56ffff', '#67ffff', '#a5ac65', '#30acb2', '#47ffff', '#000f1c', '#797b4a', '#9c8d53', '#0f465e', '#2d7575', '#43dcf3', '#4cf9ff', '#c5bc6a', '#1e4d59', '#3ca588', '#4dd49f', '#2d842a', '#243b00', '#398750', '#10211c'],
      ['#00000000', '#b96bf4', '#e57bff', '#718aa3', '#7b9bb1', '#f28bff', '#c1f5ff', '#9d58c7', '#4f2e77', '#000e37', '#9bc4ef', '#7743a7', '#292364', '#afd7fe', '#ecffff', '#7758ca', '#77b1e5', '#8cc0ff', '#2c3097', '#553b9a', '#6d96b7', '#93b7da', '#dfffff', '#260d37', '#c2ffff', '#eeffff', '#fb9fff', '#ff8cf1', '#a9e6ff', '#8d4b7a', '#cf8eff', '#000613', '#7ca5c2', '#a0bdda', '#2c1e40', '#843350', '#c660a7', '#df6cd4', '#cafbff', '#58213d', '#b0485d', '#e25c6d', '#84391d', '#6b1a00', '#a73b37', '#2f0e13'],
      ['#00000000', '#02ae55', '#03c85f', '#04ff7a', '#04ff84', '#03e16e', '#06ffdd', '#028f45', '#014b29', '#001713', '#05ffb3', '#016d3a', '#003922', '#06ffbe', '#08ffff', '#018f46', '#04ffab', '#04ffc4', '#014e34', '#016035', '#03ff89', '#05ffa4', '#07ffe6', '#001513', '#06fff4', '#08fff7', '#03ff7c', '#04e453', '#05ffc6', '#027a2a', '#02e76c', '#000a07', '#04ff92', '#05ffa4', '#013116', '#02531c', '#029b3a', '#03b049', '#06ffd1', '#013615', '#027520', '#039626', '#025d0a', '#012900', '#026013', '#011707'],
      ['#00000000', '#8b6a33', '#ad7a39', '#e5a34a', '#f8b650', '#b68a43', '#ffff87', '#76572a', '#3b2e19', '#000e0b', '#ffe86d', '#5a4323', '#1f2315', '#fffe74', '#ffff9f', '#5a572b', '#f1d168', '#ffe377', '#213020', '#403b20', '#dcb253', '#ffd863', '#ffff8c', '#1c0d0b', '#ffff94', '#ffff96', '#bd9f4b', '#e38c33', '#ffff78', '#6a4b1a', '#9c8d42', '#000604', '#fac359', '#ffe063', '#211e0e', '#633311', '#955f23', '#a86c2d', '#ffff7f', '#42210d', '#844714', '#aa5c17', '#633906', '#501900', '#7d3b0b', '#230e04'],
      ['#00000000', '#12077d', '#17088c', '#1e0bb5', '#210cc4', '#1809a3', '#3313ff', '#100666', '#08033d', '#00011c', '#290fff', '#0c0456', '#040233', '#2f10ff', '#3f17ff', '#0c0668', '#200efe', '#250fff', '#04034d', '#08044f', '#1d0ccb', '#270ef2', '#3b15ff', '#04011c', '#3415ff', '#3f16ff', '#190ab7', '#1e097c', '#2d12ff', '#0e053f', '#1509a0', '#00000a', '#210dd8', '#2b0ef2', '#040221', '#0d0329', '#140656', '#16076d', '#3613ff', '#09021f', '#110530', '#160638', '#0d040f', '#0b0200', '#10041c', '#05010a'],
      ['#00000000', '#338ec0', '#3fa3d6', '#53dbff', '#5af4ff', '#42b9f9', '#8effff', '#2b759c', '#153e5d', '#00132b', '#72ffff', '#215983', '#0b2f4e', '#81ffff', '#adffff', '#21759f', '#58ffff', '#67ffff', '#0c4076', '#174f79', '#50eeff', '#6cffff', '#a4ffff', '#0a112b', '#8effff', '#afffff', '#45d4ff', '#52bbbd', '#7cffff', '#276460', '#39bdf4', '#00080f', '#5bffff', '#76ffff', '#0c2832', '#24443f', '#367f83', '#3d90a6', '#94ffff', '#182d30', '#306049', '#3e7b56', '#244c17', '#1d2200', '#2d4f2b', '#0d130f'],
      ['#00000000', '#1299ff', '#16b0ff', '#286f77', '#2b7c80', '#17c7ff', '#43c4d6', '#0f7eff', '#0842a7', '#00154d', '#369dad', '#0b60eb', '#04328c', '#3dadb8', '#52f5fd', '#0b7eff', '#2a8ea6', '#319abe', '#0445d5', '#0855d9', '#267985', '#33939e', '#4ed8df', '#04124d', '#44dcec', '#53e6ef', '#18e5ff', '#1dcaff', '#3bb8c0', '#0e6cac', '#14ccff', '#00091b', '#2b858d', '#38989e', '#042c5a', '#0d4971', '#1389eb', '#159cff', '#47cacb', '#083056', '#116783', '#16859a', '#0d5229', '#0a2500', '#10554d', '#05151b']
    ]
    
    let txn = await nftDescriptor.addManyPalettesToHeadPalette(headPalettes)
    await txn.wait()

    const headImage = [180, 620, 880, 140, 10, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 0, 1, 6, 7, 0, 7, 0, 1, 1, 1, 7, 1, 1, 1, 7, 1, 8, 1, 7, 1, 8, 1, 9, 2, 7, 1, 10, 6, 0, 6, 0, 1, 5, 1, 2, 1, 9, 1, 8, 2, 11, 1, 8, 1, 11, 1, 7, 1, 9, 1, 7, 1, 9, 1, 1, 5, 0, 4, 0, 1, 1, 1, 12, 1, 2, 1, 8, 1, 11, 1, 8, 2, 11, 1, 9, 3, 11, 1, 12, 1, 7, 1, 12, 1, 1, 4, 0, 4, 0, 1, 8, 1, 11, 1, 8, 3, 7, 1, 11, 1, 8, 1, 13, 1, 12, 2, 8, 1, 12, 2, 8, 2, 11, 3, 0, 3, 0, 1, 8, 1, 11, 1, 7, 1, 11, 1, 14, 1, 1, 2, 7, 1, 11, 1, 15, 2, 11, 1, 7, 1, 9, 1, 11, 1, 7, 2, 9, 1, 4, 2, 0, 3, 0, 1, 3, 1, 7, 2, 11, 1, 7, 1, 16, 1, 9, 1, 8, 1, 9, 1, 8, 1, 7, 1, 9, 1, 8, 1, 7, 3, 9, 1, 8, 1, 5, 2, 0, 3, 0, 1, 5, 1, 12, 1, 11, 1, 7, 1, 11, 2, 7, 3, 11, 1, 9, 1, 17, 2, 8, 1, 9, 1, 11, 1, 8, 1, 11, 1, 12, 1, 15, 1, 0, 2, 0, 1, 7, 1, 1, 1, 11, 2, 8, 1, 12, 3, 11, 2, 9, 1, 11, 2, 9, 1, 11, 1, 7, 1, 8, 1, 9, 2, 8, 1, 11, 1, 0, 2, 0, 1, 5, 1, 6, 2, 11, 1, 12, 1, 11, 1, 9, 1, 8, 1, 1, 1, 9, 1, 7, 1, 8, 3, 11, 1, 18, 1, 19, 1, 8, 2, 9, 1, 7, 1, 0, 1, 0, 1, 20, 2, 7, 2, 8, 1, 12, 1, 8, 1, 11, 2, 8, 2, 7, 1, 9, 1, 21, 2, 9, 1, 7, 2, 9, 1, 12, 1, 2, 1, 8, 1, 7, 1, 0, 1, 5, 1, 11, 1, 22, 1, 11, 1, 23, 1, 11, 1, 1, 1, 9, 5, 11, 3, 8, 2, 9, 1, 11, 2, 9, 2, 1, 1, 0, 1, 5, 1, 8, 1, 11, 1, 9, 1, 7, 1, 11, 1, 9, 1, 2, 1, 11, 1, 1, 1, 11, 1, 7, 1, 9, 2, 8, 5, 9, 1, 1, 1, 8, 1, 11, 1, 0, 1, 19, 1, 8, 1, 24, 1, 8, 1, 5, 1, 7, 3, 8, 3, 11, 1, 8, 1, 12, 2, 11, 2, 9, 1, 8, 1, 9, 1, 8, 1, 7, 1, 9, 1, 0, 1, 2, 1, 1, 1, 3, 1, 1, 1, 11, 1, 8, 1, 9, 1, 11, 1, 12, 1, 1, 1, 9, 1, 2, 1, 9, 1, 25, 3, 8, 2, 9, 2, 8, 1, 3, 1, 1, 1, 26, 2, 7, 2, 11, 1, 7, 1, 8, 1, 11, 1, 9, 1, 11, 1, 7, 1, 9, 1, 8, 3, 9, 1, 12, 1, 9, 1, 8, 1, 9, 2, 8, 1, 12, 1, 9, 1, 0, 1, 1, 1, 9, 1, 8, 1, 2, 3, 11, 2, 8, 1, 11, 1, 12, 1, 11, 1, 9, 1, 19, 1, 8, 1, 9, 1, 4, 4, 9, 1, 1, 1, 2, 1, 5, 1, 7, 1, 25, 1, 11, 1, 12, 1, 1, 1, 7, 1, 8, 1, 1, 1, 9, 1, 1, 1, 2, 1, 8, 3, 9, 1, 11, 2, 8, 1, 9, 1, 3, 2, 9, 1, 2, 1, 0, 1, 20, 1, 11, 1, 2, 1, 11, 1, 23, 1, 7, 1, 8, 2, 1, 1, 11, 1, 9, 1, 11, 1, 8, 1, 11, 1, 9, 1, 8, 1, 27, 1, 9, 1, 23, 1, 9, 2, 12, 1, 0, 1, 1, 1, 7, 1, 16, 1, 8, 1, 25, 1, 11, 2, 9, 1, 11, 1, 8, 1, 12, 1, 7, 1, 8, 1, 9, 1, 12, 1, 9, 1, 11, 1, 9, 1, 12, 1, 9, 1, 5, 1, 9, 1, 7, 1, 0, 1, 21, 1, 2, 1, 8, 1, 2, 1, 8, 1, 21, 1, 12, 2, 9, 1, 11, 1, 28, 1, 25, 1, 6, 1, 1, 1, 8, 3, 9, 1, 12, 1, 9, 1, 8, 1, 4, 1, 3, 1, 0, 1, 0, 1, 7, 1, 11, 1, 7, 2, 8, 1, 7, 1, 9, 1, 8, 1, 12, 1, 9, 1, 1, 1, 9, 1, 8, 1, 9, 1, 8, 1, 11, 1, 8, 1, 12, 1, 9, 1, 11, 1, 12, 1, 1, 1, 0, 2, 0, 3, 8, 1, 11, 1, 29, 1, 11, 1, 8, 1, 12, 1, 8, 1, 11, 1, 2, 1, 30, 1, 8, 1, 2, 1, 8, 2, 9, 1, 31, 1, 9, 1, 12, 1, 4, 1, 0, 2, 0, 1, 32, 1, 12, 1, 2, 1, 29, 1, 13, 1, 8, 1, 23, 1, 4, 1, 8, 1, 1, 1, 9, 1, 23, 1, 31, 1, 9, 1, 12, 1, 8, 1, 9, 1, 8, 1, 9, 1, 8, 2, 0, 3, 0, 1, 8, 1, 9, 1, 33, 1, 8, 1, 11, 1, 9, 1, 2, 1, 9, 1, 12, 1, 8, 1, 11, 2, 8, 4, 9, 1, 8, 1, 3, 2, 0, 4, 0, 1, 8, 1, 12, 1, 2, 1, 7, 1, 23, 1, 9, 1, 8, 1, 23, 2, 9, 1, 31, 2, 9, 1, 8, 1, 9, 1, 12, 1, 2, 1, 7, 2, 0, 4, 0, 1, 8, 1, 9, 1, 34, 1, 7, 1, 8, 1, 11, 1, 9, 2, 8, 1, 3, 4, 8, 2, 9, 1, 1, 1, 32, 2, 0, 4, 0, 1, 35, 1, 7, 1, 9, 1, 36, 1, 12, 1, 9, 1, 23, 1, 8, 1, 9, 1, 1, 4, 9, 1, 31, 1, 1, 1, 9, 3, 0, 4, 0, 1, 29, 1, 23, 1, 9, 1, 5, 1, 23, 2, 9, 1, 23, 2, 9, 2, 12, 2, 9, 1, 23, 2, 3, 3, 0, 5, 0, 1, 29, 1, 37, 1, 35, 1, 38, 1, 8, 1, 3, 1, 9, 1, 23, 1, 29, 1, 9, 2, 23, 1, 31, 1, 35, 1, 8, 4, 0, 6, 0, 1, 39, 1, 11, 1, 31, 1, 29, 1, 9, 1, 31, 1, 2, 2, 9, 1, 31, 3, 23, 1, 29, 4, 0, 7, 0, 1, 23, 1, 34, 1, 8, 1, 9, 1, 23, 1, 34, 1, 23, 1, 31, 1, 23, 1, 12, 1, 31, 1, 40, 1, 41, 4, 0, 8, 0, 1, 35, 1, 23, 1, 12, 1, 11, 1, 23, 1, 34, 1, 31, 1, 23, 1, 37, 1, 42, 1, 43, 5, 0, 10, 0, 2, 23, 1, 35, 1, 31, 1, 9, 1, 23, 1, 29, 1, 35, 6, 0, 11, 0, 1, 44, 2, 45, 1, 39, 1, 36, 1, 35, 7, 0]
    txn = await nftDescriptor.addHead(headImage)
    await txn.wait()

    //______________________________________________________________________________________________
    // SKIN -----------------------------------
    txn = await nftDescriptor.addPaletteToSkinPalette(['#00000000', '#efd2a5', '#3e1504', '#aa895e', '#ffecbe', '#58311d', '#6a4427', '#c3a27a', '#dfbb8c', '#6f5139', '#825a30', '#a27044', '#7b5c45', '#976334', '#876851', '#967554', '#a77b55'])
    txn = await nftDescriptor.addPaletteToSkinPalette(['#00000000', '#ad7628', '#2c0c01', '#7b4d17', '#c1842e', '#401b07', '#4c260a', '#8d5a1d', '#a16822', '#502d0e', '#5e320c', '#753f10', '#593311', '#6d380d', '#623a14', '#6c4114', '#794515'])
    txn = await nftDescriptor.addPaletteToSkinPalette(['#00000000', '#e0b685', '#3a1203', '#9f764c', '#facc99', '#532a17', '#633b20', '#b78c62', '#d1a171', '#68462e', '#794d27', '#976137', '#735038', '#8d562a', '#7e5a41', '#8c6544', '#9c6a45'])

    await txn.wait()
    const skinImage = [700, 420, 1060, 200,
      1, 0, 1, 1, 9, 0, 
      1, 2, 1, 3, 1, 4, 8, 0, 
      1, 5, 1, 6, 2, 4, 7, 0, 
      1, 5, 1, 6, 1, 7, 2, 1, 6, 0, 
      3, 6, 1, 3, 2, 8, 5, 0, 
      1, 9, 2, 6, 1, 10, 1, 11, 1, 3, 1, 11, 4, 0, 
      1, 12, 1, 9, 1, 6, 3, 10, 2, 11, 1, 13, 2, 10,
      1, 14, 1, 12, 1, 9, 1, 13, 2, 10, 2, 13, 1, 10, 2, 13, 
      2, 14, 1, 12, 1, 14, 1, 11, 1, 13, 5, 10, 
      3, 14, 2, 15, 1, 11, 5, 10, 
      1, 0, 3, 15, 2, 3, 2, 15, 2, 16, 1, 0,
      1, 0, 2, 15, 7, 3, 1, 0, 
      2, 0, 1, 3, 1, 16, 6, 3, 1, 0, 
      2, 0, 2, 15, 5, 3, 2, 0, 
      3, 0, 6, 3, 2, 0, 
      3, 0, 2, 15, 3, 3, 3, 0, 
      4, 0, 1, 14, 1, 15, 2, 11, 3, 0, 
      4, 0, 3, 14, 4, 0]
          
    txn = await nftDescriptor.addSkin(skinImage)
    await txn.wait()

    //_____________________________________________________________________________________________
    // JACKET --------------------------------------------

    // const filenameSkin = path.normalize(__dirname + "/../Palettes/RLE_Colors_body.txt")
    // const allFileContentsSkin = fs.readFileSync(filenameSkin, 'utf-8');
    // allFileContentsSkin.split(/\r?\n/).forEach(async (line) =>  {
    //   if (line != "") {
    //        line = line.substring(1, line.length - 1)
    //        line = line.split(', ')
    //        txn = await nftDescriptor.addManyColorsToJacketPalette(line)
    //        await txn.wait()
    //   }
    // });

    const jacketPalettes = [
      ['#00000000', '#7e4570', '#853f53', '#12d711', '#a85161', '#1bfc0f', '#19dd0b', '#0f9208', '#96464e', '#138c06', '#17b508', '#0d4800', '#a54b50', '#0a3101', '#bc5f78', '#c45c6c', '#21ff12', '#22ff15', '#0f7007', '#1bff11', '#107001', '#0c5304', '#17ee0e', '#d36573', '#b15257', '#000000', '#0b5f08', '#12a30c', '#a14845', '#1eff11', '#e46d80', '#d06168', '#be5658', '#964343', '#b3514d', '#1bff1b', '#15d411', '#1bff14', '#24ff10', '#16bd04', '#bb5661', '#20ff0a', '#1dff0f', '#18e001', '#1fff0b', '#1eff17', '#1dff0c', '#1dff05', '#df6a76', '#1eff07', '#1eff01', '#1eff15', '#c75d59', '#1beb01', '#c25d62', '#21ff0f', '#25ff0f', '#ec768c', '#26ff0a', '#26ff0d', '#b1483f', '#1dff12', '#1af104'],
      ['#00000000', '#3f58ff', '#4250c1', '#253178', '#5467e2', '#373969', '#33324d', '#1f2138', '#4b59b6', '#27202d', '#2f293a', '#1c1002', '#525fbb', '#160b07', '#5e79ff', '#6275fb', '#444b7f', '#464f96', '#1f1933', '#373f7d', '#201909', '#191320', '#303665', '#6a80ff', '#5868ca', '#000000', '#171536', '#252556', '#515ca1', '#3e437d', '#728bff', '#687cf3', '#5f6ece', '#4b559b', '#5968b4', '#3749bf', '#2b307c', '#384192', '#4a4d76', '#2d2b20', '#5e6ee2', '#423c45', '#3c4069', '#313307', '#3f474f', '#3d50a3', '#3b3d54', '#3b3d24', '#7087ff', '#3e4433', '#3e4406', '#3d4998', '#6477d0', '#373506', '#6176e4', '#44486b', '#4d566d', '#7696ff', '#4e5847', '#4f4e5f', '#585b92', '#3c4b7f', '#35361c'],
      ['#00000000', '#af2952', '#b8253c', '#661725', '#e93047', '#991b21', '#8c1718', '#560f12', '#cf2939', '#6d0f0e', '#821312', '#4c0801', '#e42c3a', '#3c0502', '#ff3857', '#ff374e', '#bc2328', '#c1252f', '#560c10', '#991d27', '#590c03', '#46090a', '#861920', '#ff3c54', '#f5313f', '#000000', '#400a11', '#65111b', '#df2b32', '#ab1f27', '#ff415d', '#ff3a4c', '#ff3340', '#cf2831', '#f83038', '#99223c', '#761627', '#9c1e2e', '#ce2425', '#7e140a', '#ff3347', '#b51c16', '#a71e21', '#881802', '#af2119', '#a92533', '#a51c1a', '#a31c0b', '#ff3f56', '#ab2010', '#ab2002', '#aa222f', '#ff3741', '#991902', '#ff3747', '#bc2121', '#d52822', '#ff4666', '#d82916', '#da241e', '#f52b2e', '#a62328', '#941909'],
      ['#00000000', '#01a21a', '#019213', '#8730ff', '#02bd16', '#c939ff', '#b832d9', '#70219f', '#02a312', '#8f207f', '#aa29a4', '#651005', '#02af12', '#4e0b15', '#02dd1b', '#02d719', '#f74bff', '#fe4fff', '#70198f', '#c93fff', '#76191a', '#5c135a', '#b036ff', '#02eb1a', '#02bf14', '#000000', '#541599', '#8525f3', '#02a910', '#e143ff', '#02ff1d', '#02e318', '#02ca14', '#029c0f', '#02be12', '#c948ff', '#9b30ff', '#cc41ff', '#ff4dff', '#a52b5a', '#02ca16', '#ef3cc4', '#dc40ff', '#b33215', '#e646de', '#de50ff', '#d83dee', '#d73d65', '#02f71b', '#e1448f', '#e14410', '#df49ff', '#02d914', '#c93510', '#02d816', '#f748ff', '#ff56ff', '#03ff20', '#ff58c9', '#ff4dff', '#02a80e', '#da4bff', '#c2364f'],
      ['#00000000', '#f76aff', '#ff60ff', '#903ba9', '#ff7cff', '#d84594', '#c63c6d', '#79284f', '#ff6bff', '#9a2640', '#b73152', '#6c1403', '#ff73ff', '#540d0b', '#ff91ff', '#ff8dff', '#ff5bb4', '#ff5fd4', '#791e47', '#d84cb1', '#7e1e0d', '#63172d', '#bc418f', '#ff9bff', '#ff7eff', '#000000', '#5a1a4d', '#8f2d7a', '#ff6fe4', '#f151b1', '#ffa8ff', '#ff95ff', '#ff85ff', '#ff66dc', '#ff7dfe', '#d857ff', '#a63aaf', '#db4fce', '#ff5da7', '#b1342d', '#ff85ff', '#ff4962', '#ec4d94', '#c03d0b', '#f7556f', '#ee61e6', '#e84977', '#e64932', '#ffa2ff', '#f15247', '#f15208', '#f058d6', '#ff8fff', '#d84008', '#ff8eff', '#ff5797', '#ff689a', '#ffb5ff', '#ff6a65', '#ff5e87', '#ff6ece', '#ea5bb4', '#d14228'],
      ['#00000000', '#350668', '#38054d', '#9a4ceb', '#47075a', '#e659ce', '#d34e97', '#81346e', '#3f0648', '#a43258', '#c34072', '#731904', '#45064a', '#5a110f', '#4f086f', '#530764', '#ff76fa', '#ff7cff', '#812863', '#e662f6', '#872812', '#691d3f', '#c954c7', '#59086a', '#4a0750', '#000000', '#60226b', '#983aa9', '#440640', '#ff6af6', '#600976', '#570861', '#500752', '#3f053e', '#4b0747', '#e672ff', '#b14bf3', '#ea67ff', '#ff79e8', '#bd433f', '#4f075a', '#ff5e88', '#fc65ce', '#cd4f0f', '#ff6f9a', '#fe7eff', '#f85fa5', '#f65f46', '#5e096d', '#ff6b63', '#ff6b0b', '#ff73ff', '#540853', '#e6530b', '#51085b', '#ff71d2', '#ff87d5', '#630a81', '#ff8a8c', '#ff7abc', '#4a063a', '#fa76fa', '#de5537'],
      ['#00000000', '#b8ffff', '#c1f3d9', '#6c9487', '#f5ffff', '#a1ae76', '#939856', '#5a653f', '#daffcc', '#726133', '#887d41', '#503102', '#f0ffd3', '#3f2208', '#ffffff', '#ffffff', '#c5e68f', '#cbf1a8', '#5a4d39', '#a1c08d', '#5e4d0b', '#493924', '#8ca472', '#ffffff', '#ffffe3', '#000000', '#43413d', '#6a7161', '#eaffb5', '#b4ce8d', '#ffffff', '#ffffff', '#ffffe8', '#daffaf', '#ffffca', '#a1ded7', '#7c928b', '#a3c8a4', '#d8ec85', '#848324', '#ffffff', '#bfb84e', '#b0c476', '#8f9a08', '#b8d858', '#b1f5b7', '#adba5f', '#abba28', '#ffffff', '#b4d039', '#b4d006', '#b2e0ab', '#ffffea', '#a1a206', '#ffffff', '#c5dc78', '#dfff7a', '#ffffff', '#e3ff50', '#e5ee6b', '#ffffa4', '#aee68f', '#9ba620'],
      ['#00000000', '#941d65', '#9c1a4a', '#228fff', '#c62257', '#33a8ff', '#2e93ca', '#1c6194', '#b01d46', '#245e76', '#2b7899', '#193005', '#c11f48', '#142014', '#dd286b', '#e72760', '#3edeff', '#40e9ff', '#1c4b85', '#33b9ff', '#1e4b19', '#173754', '#2c9fff', '#f82a67', '#d0224e', '#000000', '#153f8f', '#216de3', '#bd1e3e', '#39c7ff', '#ff2e72', '#f4295d', '#df244f', '#b01c3c', '#d22245', '#33d6ff', '#278dff', '#33c1ff', '#44e3ff', '#2a7e54', '#dc2457', '#3cb2b7', '#37bdff', '#2d9514', '#3ad0cf', '#38edff', '#36b4de', '#36b45e', '#ff2c6a', '#39c985', '#39c90f', '#38d8ff', '#ea2750', '#339d0f', '#e32758', '#3ed4ff', '#46feff', '#ff317d', '#48ffbc', '#48e5fc', '#d01e38', '#37deff', '#31a14a'],
      ['#00000000', '#2289ff', '#247cd6', '#8f929b', '#2da1fb', '#d6ab88', '#c49663', '#786349', '#288ac9', '#985f3a', '#b57b4b', '#6b3102', '#2c95cf', '#53210a', '#32bcff', '#35b7ff', '#ffe2a5', '#ffeec2', '#784c41', '#d6bda2', '#7d4c0c', '#623829', '#bba283', '#39c8ff', '#2fa3e0', '#000000', '#594046', '#8d6f6f', '#2b90b2', '#efcba2', '#3dd9ff', '#38c1ff', '#33ace4', '#2884ac', '#30a2c7', '#d6daf7', '#a590a0', '#dac5bd', '#ffe898', '#b08129', '#32acfb', '#feb55a', '#eac188', '#be980a', '#f5d466', '#ecf1d3', '#e6b76d', '#e5b72e', '#3cd2ff', '#efcc41', '#efcc07', '#eedcc4', '#35b9e6', '#d6a007', '#34b8fd', '#ffd88a', '#ffff8c', '#3feaff', '#ffff5c', '#ffea7b', '#2f8fa2', '#e8e2a5', '#cfa424'],
      ['#00000000', '#2182ff', '#2376ff', '#1348d3', '#2c98ff', '#1d54b8', '#1a4a87', '#103163', '#2783ff', '#152f4f', '#183c66', '#0e1803', '#2b8dff', '#0b100d', '#31b2ff', '#33aeff', '#246fe0', '#2475ff', '#102559', '#1d5ddc', '#112510', '#0d1c38', '#1950b2', '#37beff', '#2e9aff', '#000000', '#0c205f', '#133797', '#2a88ff', '#2064dc', '#3cceff', '#36b7ff', '#32a3ff', '#277eff', '#2f99ff', '#1d6bff', '#1647d9', '#1d61ff', '#2772cf', '#183f38', '#31a3ff', '#22597a', '#205fb8', '#1a4b0d', '#21688a', '#2077ff', '#1f5a94', '#1f5a3f', '#3bc7ff', '#206559', '#20650a', '#206cff', '#34afff', '#1d4f0a', '#33aeff', '#246abc', '#287fbf', '#3edeff', '#29827d', '#2973a8', '#2e87ff', '#1f6fe0', '#1c5131'],
      ['#00000000', '#722761', '#782447', '#207720', '#982e54', '#2f8c1c', '#2b7a14', '#1a510f', '#872843', '#224e0c', '#28640f', '#182800', '#942b45', '#121b02', '#a93667', '#b1345d', '#3ab822', '#3cc228', '#1a3e0d', '#2f9a21', '#1c3e02', '#162e08', '#29841b', '#be3963', '#9f2f4b', '#000000', '#14340e', '#1f5b17', '#91293c', '#35a521', '#ce3e6e', '#bb375a', '#ab314c', '#87263a', '#a12e43', '#2fb233', '#247621', '#30a027', '#40bd1f', '#276908', '#a93154', '#389412', '#349d1c', '#2a7c02', '#36ad15', '#34c52b', '#339516', '#339509', '#c93c66', '#35a70d', '#35a701', '#35b428', '#b4354d', '#2f8201', '#ae3555', '#3ab01c', '#42d31d', '#d44379', '#43d813', '#43bf19', '#9f2936', '#33b822', '#2e8507'],
      ['#00000000', '#3a3cab', '#3d377e', '#52bc1a', '#4d4694', '#7bdd17', '#70c111', '#45800c', '#453d76', '#577b0a', '#689e0d', '#3d3f00', '#4c417a', '#302b02', '#5652b6', '#5a50a4', '#97ff1b', '#9bff20', '#45620b', '#7bf31b', '#486202', '#384907', '#6bd016', '#6158af', '#514784', '#000000', '#33530c', '#518f13', '#4a3f69', '#89ff1b', '#695fc2', '#5f559f', '#574b86', '#453a65', '#524775', '#7bff29', '#5fba1b', '#7dfd1f', '#a5ff19', '#65a607', '#564b94', '#91e90f', '#86f817', '#6dc402', '#8cff11', '#87ff23', '#84ec12', '#83ec08', '#675cb3', '#89ff0b', '#89ff01', '#88ff21', '#5b5187', '#7bce01', '#595195', '#97ff17', '#aaff17', '#6c67d4', '#adff0f', '#afff15', '#513f5f', '#85ff1b', '#76d306'],
      ['#00000000', '#6d17ff', '#7315ce', '#5d1a3d', '#911bf2', '#8b1e35', '#7f1b27', '#4e121c', '#8117c2', '#631117', '#76161d', '#450901', '#8e19c8', '#360604', '#a220ff', '#a91fff', '#aa2841', '#af2a4c', '#4e0e1a', '#8b2240', '#510e05', '#3f0a10', '#791d33', '#b622ff', '#991cd8', '#000000', '#3a0b1c', '#5c142c', '#8b18ac', '#9b2440', '#c525ff', '#b321ff', '#a41ddc', '#8116a6', '#9a1bc0', '#8b2761', '#6b1a3f', '#8d234a', '#bb293c', '#721710', '#a11df2', '#a52023', '#982235', '#7b1b04', '#9f2628', '#992b53', '#95212b', '#942112', '#c124ff', '#9b241a', '#9b2403', '#9a274d', '#ac1fde', '#8b1c03', '#a71ff4', '#aa2636', '#c12e37', '#cb28ff', '#c42f24', '#c52a30', '#99189c', '#962841', '#861d0e'],
      ['#00000000', '#6fe21d', '#75cc15', '#417c0d', '#94ff19', '#61920b', '#598008', '#365506', '#83e314', '#455105', '#526906', '#302900', '#90f414', '#261c01', '#a5ff1f', '#acff1b', '#77c10e', '#7acb10', '#364106', '#61a10e', '#394101', '#2c3003', '#558a0b', '#baff1d', '#9bff16', '#000000', '#283706', '#405f09', '#8dec12', '#6cad0e', '#c8ff21', '#b6ff1b', '#a7ff17', '#83d911', '#9dff14', '#61ba15', '#4b7b0e', '#63a810', '#83c60d', '#506e03', '#a4ff19', '#739a08', '#6aa40b', '#568101', '#6fb509', '#6bce12', '#689c09', '#679c04', '#c4ff1e', '#6cae06', '#6cae01', '#6cbc11', '#afff17', '#618801', '#aaff19', '#77b80c', '#87dd0c', '#cfff24', '#89e208', '#8ac70a', '#9bea10', '#69c10e', '#5e8b03']
    ]

    txn = await nftDescriptor.addManyPalettesToJacketPalette(jacketPalettes)
    await txn.wait()

    const jacketImage = [620, 800, 1060, 0, 10, 0, 1, 1, 29, 0, 9, 0, 1, 2, 1, 3, 29, 0, 6, 0, 1, 4, 1, 5, 2, 6, 1, 7, 29, 0, 5, 0, 1, 8, 2, 5, 2, 6, 1, 9, 29, 0, 4, 0, 1, 4, 1, 8, 2, 5, 1, 10, 2, 11, 29, 0, 3, 0, 1, 4, 2, 12, 1, 5, 1, 6, 1, 9, 1, 11, 1, 13, 29, 0, 2, 0, 1, 14, 1, 15, 1, 12, 1, 16, 1, 17, 1, 5, 1, 9, 1, 13, 1, 18, 16, 0, 1, 19, 12, 0, 2, 0, 1, 15, 1, 12, 1, 16, 1, 19, 1, 4, 1, 5, 1, 20, 1, 21, 1, 7, 15, 0, 1, 22, 1, 5, 1, 19, 11, 0, 1, 15, 2, 23, 1, 24, 1, 17, 1, 16, 1, 5, 2, 6, 1, 7, 1, 25, 13, 0, 1, 26, 1, 9, 3, 16, 1, 19, 10, 0, 1, 23, 2, 15, 1, 24, 1, 17, 4, 6, 1, 27, 1, 25, 13, 0, 1, 6, 4, 28, 1, 29, 1, 19, 9, 0, 1, 30, 1, 31, 1, 32, 1, 24, 1, 33, 1, 5, 2, 6, 1, 10, 1, 3, 1, 25, 10, 0, 1, 24, 1, 12, 1, 24, 2, 34, 3, 28, 1, 17, 1, 16, 2, 19, 1, 35, 6, 0, 1, 23, 1, 31, 1, 32, 1, 12, 1, 33, 3, 6, 1, 10, 1, 36, 1, 25, 10, 0, 4, 32, 1, 24, 1, 12, 1, 34, 2, 12, 1, 8, 3, 19, 1, 37, 5, 0, 1, 30, 1, 32, 1, 24, 1, 32, 1, 33, 1, 19, 2, 6, 1, 10, 1, 36, 1, 25, 10, 0, 1, 32, 2, 15, 4, 24, 4, 12, 1, 17, 1, 29, 2, 19, 4, 0, 1, 15, 1, 38, 1, 24, 1, 30, 1, 24, 1, 16, 2, 6, 1, 39, 1, 5, 1, 25, 10, 0, 1, 31, 2, 23, 2, 32, 2, 24, 1, 15, 1, 40, 1, 28, 1, 12, 1, 16, 1, 8, 1, 19, 1, 5, 1, 19, 3, 0, 1, 41, 1, 30, 1, 23, 1, 31, 1, 24, 1, 28, 1, 42, 1, 6, 1, 9, 1, 43, 1, 19, 9, 0, 1, 15, 1, 31, 1, 34, 1, 23, 1, 12, 2, 15, 1, 33, 1, 12, 1, 8, 1, 12, 1, 16, 1, 12, 1, 17, 1, 29, 1, 22, 1, 5, 1, 44, 1, 45, 1, 45, 1, 16, 1, 12, 1, 24, 1, 46, 1, 32, 1, 12, 1, 33, 1, 6, 1, 39, 1, 22, 1, 47, 9, 0, 2, 30, 1, 48, 2, 15, 1, 12, 1, 24, 1, 12, 1, 16, 1, 24, 1, 32, 2, 24, 1, 12, 1, 8, 2, 5, 1, 44, 1, 47, 1, 47, 1, 32, 1, 24, 1, 16, 1, 6, 1, 5, 1, 6, 1, 33, 1, 5, 1, 10, 1, 47, 1, 45, 1, 5, 8, 0, 1, 23, 1, 30, 1, 31, 1, 24, 1, 28, 1, 15, 1, 24, 1, 28, 1, 42, 1, 24, 1, 5, 1, 15, 1, 12, 1, 24, 1, 12, 2, 5, 3, 47, 1, 32, 1, 24, 1, 30, 1, 24, 1, 12, 4, 6, 1, 50, 1, 51, 1, 47, 7, 0, 1, 30, 4, 24, 1, 30, 3, 12, 4, 24, 1, 28, 1, 52, 1, 42, 2, 5, 1, 53, 1, 49, 1, 49, 1, 32, 1, 23, 1, 32, 1, 16, 1, 46, 1, 12, 1, 6, 1, 4, 1, 6, 1, 10, 1, 47, 1, 42, 1, 46, 6, 0, 1, 54, 1, 15, 1, 17, 1, 28, 2, 33, 1, 28, 1, 24, 1, 34, 1, 31, 1, 44, 4, 16, 1, 17, 1, 8, 1, 5, 1, 49, 2, 47, 1, 32, 1, 55, 2, 23, 1, 24, 1, 33, 1, 16, 1, 6, 1, 16, 1, 10, 1, 47, 1, 51, 1, 47, 5, 0, 1, 15, 1, 12, 1, 4, 1, 12, 1, 33, 1, 56, 1, 34, 1, 24, 1, 16, 1, 42, 1, 16, 1, 28, 1, 24, 1, 12, 1, 15, 2, 12, 1, 17, 1, 5, 1, 47, 1, 53, 1, 53, 1, 57, 2, 30, 1, 24, 1, 32, 1, 15, 1, 23, 1, 12, 1, 17, 1, 6, 1, 39, 2, 47, 1, 5, 4, 0, 1, 8, 1, 24, 1, 28, 1, 9, 1, 39, 1, 16, 1, 5, 2, 6, 1, 5, 2, 24, 1, 15, 1, 40, 1, 24, 1, 12, 1, 15, 2, 8, 1, 53, 1, 47, 1, 47, 1, 59, 1, 38, 1, 60, 2, 32, 1, 31, 2, 15, 1, 12, 1, 17, 1, 6, 1, 47, 1, 61, 1, 62, 3, 0, 1, 8, 1, 52, 1, 20, 1, 16, 1, 11, 1, 6, 1, 17, 1, 8, 1, 17, 1, 16, 1, 5, 1, 16, 1, 24, 3, 15, 1, 32, 1, 2, 1, 5, 1, 8, 1, 43, 1, 47, 1, 47]
    // const jacketImage = [619, 793, 1058, 0, 10, 0, 1, 1, 29, 0, 9, 0, 1, 2, 1, 3, 29, 0, 6, 0, 1, 4, 1, 5, 2, 6, 1, 7, 29, 0, 5, 0, 1, 8, 2, 5, 2, 6, 1, 9, 29, 0, 4, 0, 1, 4, 1, 8, 2, 5, 1, 10, 2, 11, 29, 0, 3, 0, 1, 4, 2, 12, 1, 5, 1, 6, 1, 9, 1, 11, 1, 13, 29, 0, 2, 0, 1, 14, 1, 15, 1, 12, 1, 16, 1, 17, 1, 5, 1, 9, 1, 13, 1, 18, 16, 0, 1, 19, 12, 0, 2, 0, 1, 15, 1, 12, 1, 16, 1, 19, 1, 4, 1, 5, 1, 20, 1, 21, 1, 7, 15, 0, 1, 22, 1, 5, 1, 19, 11, 0, 1, 15, 2, 23, 1, 24, 1, 17, 1, 16, 1, 5, 2, 6, 1, 7, 1, 25, 13, 0, 1, 26, 1, 9, 3, 16, 1, 19, 10, 0, 1, 23, 2, 15, 1, 24, 1, 17, 4, 6, 1, 27, 1, 25, 13, 0, 1, 6, 4, 28, 1, 29, 1, 19, 9, 0, 1, 30, 1, 31, 1, 32, 1, 24, 1, 33, 1, 5, 2, 6, 1, 10, 1, 3, 1, 25, 10, 0, 1, 24, 1, 12, 1, 24, 2, 34, 3, 28, 1, 17, 1, 16, 2, 19, 1, 35, 6, 0, 1, 23, 1, 31, 1, 32, 1, 12, 1, 33, 3, 6, 1, 10, 1, 36, 1, 25, 10, 0, 4, 32, 1, 24, 1, 12, 1, 34, 2, 12, 1, 8, 3, 19, 1, 37, 5, 0, 1, 30, 1, 32, 1, 24, 1, 32, 1, 33, 1, 19, 2, 6, 1, 10, 1, 36, 1, 25, 10, 0, 1, 32, 2, 15, 4, 24, 4, 12, 1, 17, 1, 29, 2, 19, 4, 0, 1, 15, 1, 38, 1, 24, 1, 30, 1, 24, 1, 16, 2, 6, 1, 39, 1, 5, 1, 25, 10, 0, 1, 31, 2, 23, 2, 32, 2, 24, 1, 15, 1, 40, 1, 28, 1, 12, 1, 16, 1, 8, 1, 19, 1, 5, 1, 19, 3, 0, 1, 41, 1, 30, 1, 23, 1, 31, 1, 24, 1, 28, 1, 42, 1, 6, 1, 9, 1, 43, 1, 19, 9, 0, 1, 15, 1, 31, 1, 34, 1, 23, 1, 12, 2, 15, 1, 33, 1, 12, 1, 8, 1, 12, 1, 16, 1, 12, 1, 17, 1, 29, 1, 22, 1, 5, 1, 44, 1, 45, 1, 45, 1, 16, 1, 12, 1, 24, 1, 46, 1, 32, 1, 12, 1, 33, 1, 6, 1, 39, 1, 22, 1, 47, 9, 0, 2, 30, 1, 48, 2, 15, 1, 12, 1, 24, 1, 12, 1, 16, 1, 24, 1, 32, 2, 24, 1, 12, 1, 8, 2, 5, 1, 44, 1, 47, 1, 47, 1, 32, 1, 24, 1, 16, 1, 6, 1, 5, 1, 6, 1, 33, 1, 5, 1, 10, 1, 47, 1, 45, 1, 5, 8, 0, 1, 23, 1, 30, 1, 31, 1, 24, 1, 28, 1, 15, 1, 24, 1, 28, 1, 42, 1, 24, 1, 5, 1, 15, 1, 12, 1, 24, 1, 12, 2, 5, 3, 47, 1, 32, 1, 24, 1, 30, 1, 24, 1, 12, 4, 6, 1, 50, 1, 51, 1, 47, 7, 0, 1, 30, 4, 24, 1, 30, 3, 12, 4, 24, 1, 28, 1, 52, 1, 42, 2, 5, 1, 53, 1, 49, 1, 49, 1, 32, 1, 23, 1, 32, 1, 16, 1, 46, 1, 12, 1, 6, 1, 4, 1, 6, 1, 10, 1, 47, 1, 42, 1, 46, 6, 0, 1, 54, 1, 15, 1, 17, 1, 28, 2, 33, 1, 28, 1, 24, 1, 34, 1, 31, 1, 44, 4, 16, 1, 17, 1, 8, 1, 5, 1, 49, 2, 47, 1, 32, 1, 55, 2, 23, 1, 24, 1, 33, 1, 16, 1, 6, 1, 16, 1, 10, 1, 47, 1, 51, 1, 47, 5, 0, 1, 15, 1, 12, 1, 4, 1, 12, 1, 33, 1, 56, 1, 34, 1, 24, 1, 16, 1, 42, 1, 16, 1, 28, 1, 24, 1, 12, 1, 15, 2, 12, 1, 17, 1, 5, 1, 47, 1, 53, 1, 53, 1, 57, 2, 30, 1, 24, 1, 32, 1, 15, 1, 23, 1, 12, 1, 17, 1, 6, 1, 39, 2, 47, 1, 5, 4, 0, 1, 8, 1, 24, 1, 28, 1, 9, 1, 39, 1, 16, 1, 5, 2, 6, 1, 5, 2, 24, 1, 15, 1, 40, 1, 24, 1, 12, 1, 15, 2, 8, 1, 53, 1, 47, 1, 47, 1, 59, 1, 38, 1, 60, 2, 32, 1, 31, 2, 15, 1, 12, 1, 17, 1, 6, 1, 47, 1, 61, 1, 62, 3, 0, 1, 8, 1, 52, 1, 20, 1, 16, 1, 11, 1, 6, 1, 17, 1, 8, 1, 17, 1, 16, 1, 5, 1, 16, 1, 24, 3, 15, 1, 32, 1, 2, 1, 5, 1, 8, 1, 43, 1, 47, 1, 47]
    txn = await nftDescriptor.addJacket(jacketImage)
    await txn.wait()

    //______________________________________________________________________________________________________


    const seed = await nftSeeder.connect(addr1).generateSeed(nftDescriptor.address);

    //  console.log(seed)
    const wholeSeed = await nftSeeder.seeds(addr1.address);
    //  console.log(wholeSeed)

    const skin = await nftDescriptor.getSkin(wholeSeed.skin)
    const skinPalette = await nftDescriptor.getSkinPalette(wholeSeed.skinPalette)
    const head = await nftDescriptor.getHead(wholeSeed.head)
    const headPalette = await nftDescriptor.getHeadPalette(wholeSeed.headPalette)
    const jacket = await nftDescriptor.getJacket(wholeSeed.jacket)
    const jacketPalette = await nftDescriptor.getJacketPalette(wholeSeed.jacketPalette)

    const mySeed = {
      skin: skin,
      skinPalette: skinPalette,
      jacket: jacket,
      jacketPalette: jacketPalette,
      head: head,
      headPalette: headPalette
    }
    const url = await RLEtoSVG(mySeed);
    //txn = await nftDescriptor.makeAnEpicNFT(wholeSeed, url)
    //await txn.wait()

  });
});


